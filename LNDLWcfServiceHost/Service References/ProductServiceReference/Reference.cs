//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace LNDLWcfServiceHost.ProductServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductServiceReference.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductEntities", ReplyAction="http://tempuri.org/IProductService/GetProductEntitiesResponse")]
        WcfProductService.EFDAL.tblProduct[] GetProductEntities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductEntities", ReplyAction="http://tempuri.org/IProductService/GetProductEntitiesResponse")]
        System.Threading.Tasks.Task<WcfProductService.EFDAL.tblProduct[]> GetProductEntitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetCurtainEntities", ReplyAction="http://tempuri.org/IProductService/GetCurtainEntitiesResponse")]
        WcfProductService.EFDAL.tblCurtain[] GetCurtainEntities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetCurtainEntities", ReplyAction="http://tempuri.org/IProductService/GetCurtainEntitiesResponse")]
        System.Threading.Tasks.Task<WcfProductService.EFDAL.tblCurtain[]> GetCurtainEntitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetFabricEntities", ReplyAction="http://tempuri.org/IProductService/GetFabricEntitiesResponse")]
        WcfProductService.EFDAL.tblFabric[] GetFabricEntities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetFabricEntities", ReplyAction="http://tempuri.org/IProductService/GetFabricEntitiesResponse")]
        System.Threading.Tasks.Task<WcfProductService.EFDAL.tblFabric[]> GetFabricEntitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetBedEntities", ReplyAction="http://tempuri.org/IProductService/GetBedEntitiesResponse")]
        WcfProductService.EFDAL.tblBed[] GetBedEntities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetBedEntities", ReplyAction="http://tempuri.org/IProductService/GetBedEntitiesResponse")]
        System.Threading.Tasks.Task<WcfProductService.EFDAL.tblBed[]> GetBedEntitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetMessage", ReplyAction="http://tempuri.org/IProductService/GetMessageResponse")]
        string GetMessage(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetMessage", ReplyAction="http://tempuri.org/IProductService/GetMessageResponse")]
        System.Threading.Tasks.Task<string> GetMessageAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : LNDLWcfServiceHost.ProductServiceReference.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<LNDLWcfServiceHost.ProductServiceReference.IProductService>, LNDLWcfServiceHost.ProductServiceReference.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WcfProductService.EFDAL.tblProduct[] GetProductEntities() {
            return base.Channel.GetProductEntities();
        }
        
        public System.Threading.Tasks.Task<WcfProductService.EFDAL.tblProduct[]> GetProductEntitiesAsync() {
            return base.Channel.GetProductEntitiesAsync();
        }
        
        public WcfProductService.EFDAL.tblCurtain[] GetCurtainEntities() {
            return base.Channel.GetCurtainEntities();
        }
        
        public System.Threading.Tasks.Task<WcfProductService.EFDAL.tblCurtain[]> GetCurtainEntitiesAsync() {
            return base.Channel.GetCurtainEntitiesAsync();
        }
        
        public WcfProductService.EFDAL.tblFabric[] GetFabricEntities() {
            return base.Channel.GetFabricEntities();
        }
        
        public System.Threading.Tasks.Task<WcfProductService.EFDAL.tblFabric[]> GetFabricEntitiesAsync() {
            return base.Channel.GetFabricEntitiesAsync();
        }
        
        public WcfProductService.EFDAL.tblBed[] GetBedEntities() {
            return base.Channel.GetBedEntities();
        }
        
        public System.Threading.Tasks.Task<WcfProductService.EFDAL.tblBed[]> GetBedEntitiesAsync() {
            return base.Channel.GetBedEntitiesAsync();
        }
        
        public string GetMessage(string name) {
            return base.Channel.GetMessage(name);
        }
        
        public System.Threading.Tasks.Task<string> GetMessageAsync(string name) {
            return base.Channel.GetMessageAsync(name);
        }
    }
}
